@model IEnumerable<FinanceApp.Models.Expense> //IENumerable represents a collection of items we can iterate over like a list


<h2 class="container">My Expenses</h2>

<div class="container">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount</td>
                    <td>@item.Category</td>
                    <td>@item.Date.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<h2 class="container">Expenses Overview</h2>
<div class="container">
    <canvas style="max-width: 350px; max-height: 250px;" id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
    .then(response => response.json())
    .then(data => {
        new Chart(ctx, {
          type: 'pie',
          data: {
            labels: data.map(d => d.category),
            datasets: [{
              data: data.map(d => d.total),
            
            }]
          },

    });
    })

</script>
